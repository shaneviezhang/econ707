---
title: "Model Selection"
subtitle: "Week 8"
author: "Alex Cardazzi"
institute: "Old Dominion University"
format:
  revealjs:
    # chalkboard: true

    echo: true
    code-fold: show
    code-summary: "Code"
    code-tools: true
    code-copy: hover
    link-external-newwindow: true
    tbl-cap-location: top
    fig-cap-location: bottom
    #smaller: true
    
    scrollable: true
    incremental: true 
    slide-number: c/t
    show-slide-number: all
    menu: false
    
    logo: https://www.odu.edu/content/dam/odu/logos/univ/png-72dpi/odu-secondarytm-blu.png
    footer: "ECON 707/807: Econometrics II"
  
self-contained: true
# embed-resources: true
# standalone: true

editor: source
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(fig.align = 'center')
knitr::opts_chunk$set(out.width = '90%')

par(mar = c(4.1, 4.1, 1.1, 4.1))
set.seed(321)
library("stargazer")
library("lubridate")
library("forecast")
library("scales")
library("tseries")
```

## Topics

- Seasonality
- Model Selection
- Exam Review

## Rewind: Trends

Types of Trends:

- Deterministic
    - ```lm(y ~ t, df)```
    - ```arima(df$y, xreg = t)```
- Stochastic
    - ```arima(df$y, c(1, 0, 0))```
    - ```arima(df$y, c(0, 1, 0))```

## Rewind: AR(1) {visibility="uncounted"}

$$Y_t = \alpha + \beta Y_{t-1} + e_t$$

. . .

$$E[Y_t] = \frac{\alpha}{1-\beta}$$

. . .

$$\text{Var}(Y_t) = \frac{\sigma^2}{1-\beta^2}$$

## Rewind: AR(1) {visibility="uncounted"}

$$Y_t = 10 + .3Y_{t-1} + e_t$$

```{r}
#| code-fold: true

shocks <- rnorm(200)
y <- c(shocks[1], rep(0, 199))
for(i in 2:200) y[i] <- 10 + .3*y[i-1] + shocks[i]

plot(y, type = "l", xlab = "", ylab = "",
     main = paste0("Mean: ", round(mean(y[100:200]), 1), "; Var: ", round(var(y[100:200]), 1)))
```

## Rewind: AR(1) {visibility="uncounted"}

$$Y_t = 10 + .3Y_{t-1} + e_t$$

```{r}
#| code-fold: true

shocks <- rnorm(200)
y <- c(shocks[1], rep(0, 199))
for(i in 2:200) y[i] <- 10 + .3*y[i-1] + shocks[i]

plot(y, type = "l", xlab = "", ylab = "",
     main = paste0("Mean: ", round(mean(y[100:200]), 1), "; Var: ", round(var(y[100:200]), 1)))
```

## Rewind: AR(1) {visibility="uncounted"}

$$Y_t = 10 + .3Y_{t-1} + e_t$$

```{r}
#| code-fold: true

shocks <- rnorm(200)
y <- c(shocks[1], rep(0, 199))
for(i in 2:200) y[i] <- 10 + .3*y[i-1] + shocks[i]

plot(y, type = "l", xlab = "", ylab = "",
     main = paste0("Mean: ", round(mean(y[100:200]), 1), "; Var: ", round(var(y[100:200]), 1)))
```

## Rewind: AR(1) {visibility="uncounted"}

$$Y_t = 10 + .3Y_{t-1} + e_t$$

```{r}
#| code-fold: true
auto.arima(y[100:200])
```

## Rewind: Trends {visibility="uncounted"}

:::: {.columns}

::: {.column width="45%"}

::: {.fragment .fade-up}
$$\small Y_t = \alpha t + e_t$$
:::

::: {.fragment .fade-up}
$$\small \begin{align} \\ E[Y_t] = \alpha t \end{align}$$
:::

::: {.fragment .fade-up}
$$\small \begin{align} \\ \\ \text{Var}(Y_t) = \sigma^2 \end{align}$$
:::

:::

::: {.column width="45%"}

::: {.fragment .fade-up}
$$\small \begin{align} Y_t &= \alpha + Y_{t-1} + e_t \\&= \alpha + (\alpha + Y_{t-2} + e_{t-1}) +e_t \end{align}$$
:::

::: {.fragment .fade-up}
$$\small E[Y_t] = E[ \ \sum_{i=0}^{t}\alpha + \sum_{i=0}^{t}e_i \ ] = \alpha t$$
:::

::: {.fragment .fade-up}
$$\small \begin{align} \text{Var}(Y_t) &= \text{Var}( \ \sum_{i=0}^{t}\alpha + \sum_{i=0}^{t}e_i \ ) \\ &= 0 + \sum_{i=0}^{t}\text{Var}(e_i) \end{align}$$

:::

:::

::::


## Seasonality

Types of Seasonality:

- Deterministic
    - ```arima(df$y, xreg = mat[,2:12])```
- Stochastic
    - ```arima(df$y, seasonal = list(order = c(1, 0, 0), period = 12))```
    - ```arima(df$y, seasonal = list(order = c(0, 1, 0), period = 12))```

## Seasonality {visibility="uncounted"}

How to get ```auto.arima``` to use seasonal components:

- Suppose you have ```df$y```, that is a monthly time series starting in 2005-06-01.
- ```y_ts <- ts(df$y, start = c(2005, 06, 1), frequency = 12)```
- ```auto.arima(y_ts)```

## Seasonality {visibility="uncounted"}

```{r}
#| code-fold: true
N <- 12*12
t <- 1:(N)
shocks <- rnorm(N)
v1 <- rep(0, N)
v2 <- rep(0, N)
v3 <- rep(0, N)

v1 <- t + shocks
v2[1] <- shocks[1] + 1
for(i in 2:length(t)) v2[i] <- .4*v2[i-1] + shocks[i] + 1
v3[1] <- shocks[1] + 1
for(i in 2:length(t)) v3[i] <- v3[i-1] + shocks[i] + 1

plot(t, v1, col = "tomato", type = "l",
     ylim = range(v1, v2, v3), xlab = "", ylab = "")
lines(t, v2, col = "dodgerblue")
lines(t, v3, col = "mediumseagreen")
legend("topleft", bty = "n", pch = 15, cex = 1.33,
       col = c("tomato", "dodgerblue", "mediumseagreen"),
       legend = c(expression(paste("Y"[t], " = t + e"[t])),
                  expression(paste("Y"[t], " = 1 + .4*Y"[t-1]," + e"[t])),
                  expression(paste("Y"[t], " = 1 + Y"[t-1]," + e"[t]))))
legend("left", bty = "n", pch = c(NA, rep(15, 3)), cex = 1.33,
       col = c("black", "tomato", "dodgerblue", "mediumseagreen"),
       legend = c(expression(paste("E[Y"[t=144],"]:")),
                  144, 1.67, 144))
```

## Seasonality {visibility="uncounted"}

$$Y_t = t + e_t$$

```{r}
#| code-fold: true
par(mfrow = c(1, 2))
acf(v1); pacf(v1)
```

## Seasonality {visibility="uncounted"}

$$Y_t = 1 + .4Y_{t-1} + e_t$$

```{r}
#| code-fold: true
par(mfrow = c(1, 2))
acf(v2); pacf(v2)
```

## Seasonality {visibility="uncounted"}

$$Y_t = 1 + Y_{t-1} + e_t$$

```{r}
#| code-fold: true
par(mfrow = c(1, 2))
acf(v3); pacf(v3)
```

## Seasonality {visibility="uncounted"}

```{r results='hold'}
#| code-fold: true
adf.test(v1)
adf.test(v3)
```

## Seasonality {visibility="uncounted"}

```{r}
#| code-fold: true
t <- rep(1:12, 12)
shocks <- rnorm(N)
v1 <- rep(0, N)
v2 <- rep(0, N)
v3 <- rep(0, N)

v1 <- abs(t-6) + shocks - 3
v12 <- abs(t-6) + shocks - 3 + (1:length(t)) / 12
v2[1:12] <- shocks[1:12]
for(i in 13:length(t)) v2[i] <- .4*v2[i-12] + shocks[i] + 1
v3[1:12] <- shocks[1:12]
for(i in 13:length(t)) v3[i] <- v3[i-12] + shocks[i] + 1

plot(1:length(t), v1, lwd = 3,
     col = alpha("tomato", .4), type = "l",
     ylim = range(v1, v2, v3, v12),
     xlab = "", ylab = "")
lines(1:length(t), v2, lwd = 3,
      col = alpha("dodgerblue", .4))
lines(1:length(t), v3, lwd = 3,
      col = alpha("mediumseagreen", .4))
lines(1:length(t), v12, lwd = 3,
      col = alpha("orchid", .4))
legend("topleft", bty = "n", pch = 15, cex = 1.33,
       col = c("tomato", "orchid", "dodgerblue", "mediumseagreen"),
       legend = c(expression(paste("Y"[t], " = ", alpha[S], " + e"[t])),
                  expression(paste("Y"[t], " = t/12 + ", alpha[S], " + e"[t])),
                  expression(paste("Y"[t], " = .4*Y"[t-12]," + e"[t])),
                  expression(paste("Y"[t], " = Y"[t-12]," + e"[t]))))
```

## Seasonality {visibility="uncounted"}

$$Y_t = \alpha_S + e_t$$

```{r}
#| code-fold: true
par(mfrow = c(1, 2))
acf(v1)
pacf(v1)
```

## Seasonality {visibility="uncounted"}

$$Y_t = t/12 + \alpha_S + e_t$$

```{r}
#| code-fold: true
par(mfrow = c(1, 2))
acf(v12)
pacf(v12)
```

## Seasonality {visibility="uncounted"}

$$Y_t = 1 + .4 * Y_{t-12} + e_t$$

```{r}
#| code-fold: true
par(mfrow = c(1, 2))
acf(v2)
pacf(v2)
```

## Seasonality {visibility="uncounted"}

$$Y_t = 1 + Y_{t-12} + e_t$$

```{r}
#| code-fold: true
par(mfrow = c(1, 2))
acf(v3)
pacf(v3)
```



## Seasonality {visibility="uncounted"}

$$\Delta Y_t = Y_t - Y_{t-1} = 1 + (Y_{t-12} - Y_{t-13}) + e_t$$

```{r}
#| code-fold: true
par(mfrow = c(1, 2))
plot(diff(v3), type = "l")
acf(diff(v3))
```

## Seasonality {visibility="uncounted"}

$$\Delta_{12} Y_t = Y_t - Y_{t-12} = 1 + (Y_{t-12} - Y_{t-24}) + e_t$$

```{r}
#| code-fold: true
par(mfrow = c(1, 2))
plot(diff(v3, lag = 12), type = "l")
acf(diff(v3, lag = 12))
```

## Seasonality {visibility="uncounted"}

```{r}
#| code-fold: true
par(mfrow = c(1, 2))
plot(diff(diff(v3, lag = 12)), type = "l")
acf(diff(diff(v3, lag = 12)))
```

## Seasonality Diagnostics

Is this stationary?

. . .

Look at the variance:

- If increasing, stochastic (diff across period)

- If constant:
    - If trend, deterministic (trend + FE)
    - If ACF/PACF is cyclic, deterministic (FE)
    - If ACF/PACF spikes, stochastic (AR(period))

## Seasonality Diagnostics {visibility="uncounted"}

$$Y_{t} = 1 + .4Y_{t-1} + .4Y_{t-12} + e_t$$

```{r}
#| code-fold: true
N <- 144*3
t <- rep(1:12, N/12)
shocks <- rnorm(N)
v4 <- rep(0, N)

v4[1] <- shocks[1]
for(i in 2:12) v4[i] <- .4*v4[i-1] + shocks[i] + 1
for(i in 13:length(t)) v4[i] <- .4*v4[i-1] + .4*v4[i-12] + shocks[i] + 1
plot(v4, type = "l")
```

## Seasonality Diagnostics {visibility="uncounted"}

```{r}
#| code-fold: true
par(mfrow = c(1, 2))
acf(v4); pacf(v4)
```

## Seasonality Diagnostics {visibility="uncounted"}

```{r}
#| code-fold: true
par(mfrow = c(1, 2))
acf(diff(v4)); pacf(diff(v4))
```



## Seasonality Diagnostics {visibility="uncounted"}

$$Y_{t} = 1 - .4Y_{t-1} + .4Y_{t-12} + e_t$$

```{r}
#| code-fold: true
v5 <- rep(0, N)

v5[1] <- shocks[1]
for(i in 2:12) v5[i] <- -.4*v5[i-1] + shocks[i] + 1
for(i in 13:length(t)) v5[i] <- -.4*v5[i-1] + .4*v5[i-12] + shocks[i] + 1
plot(v5, type = "l")
```

## Seasonality Diagnostics {visibility="uncounted"}

```{r}
#| code-fold: true
par(mfrow = c(1, 2))
acf(v5); pacf(v5)
```

## Seasonality Diagnostics {visibility="uncounted"}

$$Y_{t} = 1 + .4Y_{t-1} + .4Y_{t-12} + e_t$$

```{r}
#| code-fold: true
arima(v4, c(1, 0, 0),
      seasonal = list(order = c(1, 0, 0),
                      period = 12))
```

## Seasonality Diagnostics {visibility="uncounted"}

$$Y_{t} = 1 - .4Y_{t-1} + .4Y_{t-12} + e_t$$

```{r}
#| code-fold: true
arima(v5, c(1, 0, 0),
      seasonal = list(order = c(1, 0, 0),
                      period = 12))
```


## Forecasting Airplane Passengers

```{r}
#| code-fold: true
data("AirPassengers")
air <- AirPassengers
air <- log(air)
plot(air, ylab = "log(Passengers)")
abline(v = 120, lty = 2, col = alpha("black", .6))
```

## Forecasting Airplane Passengers {visibility="uncounted"}

```{r}
#| code-fold: true
plot(diff(air), ylab = expression(paste(Delta, "log(Passengers)")))
```


## Forecasting Airplane Passengers {visibility="uncounted"}

```{r}
#| code-fold: true
plot(diff(air, lag = 12), ylab = expression(paste(Delta[12], "log(Passengers)")))
```

## Forecasting Airplane Passengers {visibility="uncounted"}

```{r}
#| code-fold: true
plot(diff(diff(air, lag = 12)), ylab = expression(paste(Delta, " ", Delta[12], "log(Passengers)")))
```


## Forecasting Airplane Passengers {visibility="uncounted"}

```{r}
#| code-fold: true
par(mfrow = c(1, 2))
acf(diff(diff(air, lag = 12)))
pacf(diff(diff(air, lag = 12)))
```

## Forecasting Airplane Passengers {visibility="uncounted"}

```{r}
#| code-fold: true
air1 <- ts(air[1 : (length(air) - 24)],
           start = c(1949, 1, 0), frequency = 12)
reg <- auto.arima(air1)
reg
```

## Forecasting Airplane Passengers {visibility="uncounted"}

```{r}
#| code-fold: true
par(mfrow = c(1, 2))
acf(reg$residuals)
pacf(reg$residuals)
```

## Forecasting Airplane Passengers {visibility="uncounted"}
```{r}
#| code-fold: true

p <- predict(reg, n.ahead = 24)
plot(1:(length(air)),
     rep(0, length(air)),
     type = "n", xlab = "Time",
     ylab = "Air Passengers",
     ylim = exp(range(p$pred + 1.645*p$se, air1)))
lines(1:length(air), exp(air), col = "tomato", lwd = 2)
lines(1:length(air1), exp(air1), lwd = 2)
polygon(x = c(1:24 + length(air1),
              rev(1:24 + length(air1))),
        y = c(exp(p$pred + 1.645*p$se),
              rev(exp(p$pred - 1.645*p$se))),
        col = alpha("dodgerblue", .3), border = NA)
lines(1:24 + length(air1), exp(p$pred),
      col = "dodgerblue", lwd = 2, lty = 2)
abline(v = 120, lty = 2, col = alpha("black", .6))
```

# Model Selection

## Model Selection

- "Economic" Theory
- Measures of (in-sample) Fit
- Repeated $t$/$F$ tests
- Bayes Information Criterion
    - selects the model most likely to be true (given the data)
- Akaike Information Criterion
- k-Fold Validation

## BIC vs AIC

For both BIC and AIC, smaller is better.

. . .

Both BIC and AIC penalize the model when lags increase.

. . .

AIC penalizes less than BIC for more parameters, and therefore chooses models with more lags.

. . .

BIC picks which model is most likely to be true given the data whereas AIC picks$^*$ the model with lowest forecast risk.

## k-Fold Validation

## {visibility="uncounted" background-image="https://miro.medium.com/max/1400/1*AAwIlHM8TpAVe4l2FihNUQ.png" background-size="contain"}

## {visibility="uncounted" background-image="https://www.brendanberthold.com/post/2021-02-27-k-fold-cross-validation-for-time-series-in-r-applications-to-var-models/img/kfoldCV.png" background-size="contain"}

## k-Fold Validation

- Select a handful of model specifications
- Suppose 10 years of data.
    - Fit using years 1-5, forecast year 6
    - Fit using years 1-6, forecast year 7
    - ...
- Select the model with smallest (weighted?) average RMSE/MAPE/etc.

# Forecasting Hazards in San Diego

